apiVersion: v1
kind: Namespace
metadata:
  name: prod
  labels:
    name: prod

---

apiVersion: v1
kind: Namespace
metadata:
  name: preprod
  labels:
    name: preprod

---

apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev

---

apiVersion: v1
kind: Service
metadata:
  name: flaskapp-deployment-prod
  namespace: prod
  labels:
    app: flask-svc
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
  - port: 5005
    protocol: TCP
    targetPort: 5005

---

apiVersion: v1
kind: Service
metadata:
  name: flaskapp-deployment-preprod
  namespace: preprod
  labels:
    app: flask-svc
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
  - port: 5005
    protocol: TCP
    targetPort: 5005

---

apiVersion: v1
kind: Service
metadata:
  name: flaskapp-deployment-dev
  namespace: dev
  labels:
    app: flask-svc
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
  - port: 5005
    protocol: TCP
    targetPort: 5005

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-configmap
  namespace: prod
data:
  DEBUG: "True"
  FLASK_APP: "run.py"
  FLASK_DEBUG: "True"
  SERVER_ADDRESS: "http://localhost:5005/"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-configmap
  namespace: preprod
data:
  DEBUG: "True"
  FLASK_APP: "run.py"
  FLASK_DEBUG: "True"
  SERVER_ADDRESS: "http://localhost:5005/"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-configmap
  namespace: dev
data:
  DEBUG: "True"
  FLASK_APP: "run.py"
  FLASK_DEBUG: "True"
  SERVER_ADDRESS: "http://localhost:5005/"





---







apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m01-prod
  namespace: prod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m02-prod
  namespace: prod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m02
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m03-prod
  namespace: prod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m03
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m01-preprod
  namespace: preprod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m02-preprod
  namespace: preprod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m02
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m03-preprod
  namespace: preprod
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m03
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m01-dev
  namespace: dev
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m02-dev
  namespace: dev
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m02
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment-m03-dev
  namespace: dev
  labels:
    app: flaskapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      nodeSelector:
        kubernetes.io/hostname: minikube-m03
      containers:
      - name: flask-app
        imagePullPolicy: IfNotPresent
        image: soso725/rocketecommerceapp:beta
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 250Mi
            cpu: 400m
        envFrom:
        - configMapRef:
            name: flask-app-configmap






---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m01-prod
  namespace: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m01-prod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m02-prod
  namespace: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m02-prod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m03-prod
  namespace: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m03-prod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m01-preprod
  namespace: preprod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m01-preprod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m02-preprod
  namespace: preprod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m02-preprod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flaskapp-hpa-m03-preprod
  namespace: preprod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flaskapp-deployment-m03-preprod
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

